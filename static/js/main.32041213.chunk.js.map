{"version":3,"sources":["components/Navbar/Navbar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","types/ColumnNames.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleFilters/PeopleFilters.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","className","role","to","HomePage","NotFoundPage","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","Loader","PersonLink","person","useSearchParams","searchParams","pathname","slug","search","toString","sex","name","ColumnNames","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","PeopleTable","people","sortBy","isReversed","setSortBy","setIsReversed","personSlug","useParams","values","map","columnName","isSortColumn","isSortUp","isSortDown","sort","toLowerCase","order","onClick","newColumnName","secondClick","thirdClick","undefined","toggleSortBy","born","died","fatherName","motherName","mother","find","woman","father","man","PeopleFilters","href","type","placeholder","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","loadPeople","peopleData","useEffect","isShowErrorMessage","length","visiblePeople","a","b","Name","localeCompare","Sex","Born","Died","reverse","getVisiblePeople","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.32041213.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export enum ColumnNames {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport {\n  useParams,\n  // useSearchParams\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { ColumnNames } from '../../types/ColumnNames';\nimport { SearchLink } from '../SearchLink';\n\ntype Props = {\n  people: Person[];\n  sortBy?: ColumnNames;\n  isReversed: boolean;\n  setSortBy: (value?: ColumnNames) => void;\n  setIsReversed: (value: boolean) => void;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  sortBy,\n  isReversed,\n  setSortBy,\n  setIsReversed,\n}) => {\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(searchParams.get('sort'))\n\n  const { personSlug } = useParams();\n\n  function toggleSortBy(newColumnName: ColumnNames) {\n    const firstClick = sortBy !== newColumnName;\n    const secondClick = sortBy === newColumnName && isReversed === false;\n    const thirdClick = sortBy === newColumnName && isReversed === true;\n\n    if (firstClick) {\n      setSortBy(newColumnName);\n      setIsReversed(false);\n    }\n\n    if (secondClick) {\n      setIsReversed(true);\n    }\n\n    if (thirdClick) {\n      setSortBy(undefined);\n      setIsReversed(false);\n    }\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(ColumnNames).map((columnName) => {\n            const isSortColumn = sortBy === columnName;\n            const isSortUp = isSortColumn && !isReversed;\n            const isSortDown = isSortColumn && isReversed;\n\n            return (\n              <th key={columnName}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {columnName}\n\n                  <SearchLink\n                    params={{\n                      sort: isSortDown ? null : columnName.toLowerCase(),\n                      order: isSortUp ? 'desc' : null,\n                    }}\n                    onClick={() => {\n                      toggleSortBy(columnName);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn('fas', {\n                          'fa-sort': !isSortColumn,\n                          'fa-sort-up': isSortUp,\n                          'fa-sort-down': isSortDown,\n                        })}\n                      />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n            );\n          })}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex, born, died, fatherName, motherName, slug,\n          } = person;\n          const mother = people.find((woman) => woman.name === motherName);\n\n          const father = people.find((man) => man.name === fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({ 'has-background-warning': slug === personSlug })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother ? <PersonLink person={mother} /> : motherName || '-'}\n              </td>\n\n              <td>\n                {father ? <PersonLink person={father} /> : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","export const PeopleFilters = () => {\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <a className=\"is-active\" href=\"#/people\">All</a>\n        <a className=\"\" href=\"#/people?sex=m\">Male</a>\n        <a className=\"\" href=\"#/people?sex=f\">Female</a>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=16\"\n            >\n              16\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=17\"\n            >\n              17\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=18\"\n            >\n              18\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=19\"\n            >\n              19\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=20\"\n            >\n              20\n            </a>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              href=\"#/people\"\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { PeopleFilters } from '../components/PeopleFilters/PeopleFilters';\nimport { ColumnNames } from '../types/ColumnNames';\n\ninterface PeopleFilterOptions {\n  people: Person[];\n  // selectedUserId: number,\n  // query: string,\n  // selectedCategoriesIds: number[],\n  sortBy?: ColumnNames;\n  isReversed: boolean;\n}\n\nconst getVisiblePeople = ({\n  people,\n  // selectedUserId,\n  // query,\n  // selectedCategoriesIds,\n  sortBy,\n  isReversed,\n}: PeopleFilterOptions): Person[] => {\n  const visiblePeople = [...people];\n\n  // if (selectedUserId) {\n  //   visiblePeople = visiblePeople.filter(product => (\n  //     product.user?.id === selectedUserId\n  //   ));\n  // }\n\n  // if (query) {\n  //   const normalizedQuery = query.trim().toLowerCase();\n\n  //   visiblePeople = visiblePeople.filter(product => (\n  //     product.name.toLowerCase().includes(normalizedQuery)\n  //   ));\n  // }\n\n  // if (selectedCategoriesIds.length > 0) {\n  //   visiblePeople = visiblePeople.filter(product => (\n  //     selectedCategoriesIds.includes(product.categoryId)\n  //   ));\n  // }\n\n  if (sortBy) {\n    visiblePeople.sort((a, b) => {\n      switch (sortBy) {\n        case ColumnNames.Name:\n          return a.name.localeCompare(b.name);\n\n        case ColumnNames.Sex:\n          return a.sex.localeCompare(b.sex);\n\n        case ColumnNames.Born:\n          return a.born - b.born;\n\n        case ColumnNames.Died:\n          return a.died - b.died;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visiblePeople.reverse();\n    }\n  }\n\n  return visiblePeople;\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sortBy, setSortBy] = useState<ColumnNames>();\n  const [isReversed, setIsReversed] = useState(false);\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  const loadPeople = async () => {\n    try {\n      const peopleData = await getPeople();\n\n      setPeople(peopleData);\n    } catch (error) {\n      setErrorMessage('Something went wrong');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isShowErrorMessage = !isLoading && !errorMessage && people.length === 0;\n\n  const visiblePeople = getVisiblePeople({\n    people,\n    // selectedUserId,\n    // query,\n    // selectedCategoriesIds,\n    sortBy,\n    isReversed,\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {errorMessage}\n                </p>\n              )}\n\n              {isShowErrorMessage && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              <p>There are no people matching the current search criteria</p>\n\n              {people.length > 0 && (\n                <PeopleTable\n                  people={visiblePeople}\n                  sortBy={sortBy}\n                  isReversed={isReversed}\n                  setIsReversed={setIsReversed}\n                  setSortBy={setSortBy}\n                  // searchParams={searchParams}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:personSlug\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}